Ευθυμίου Ιωάννης
1115200600296
Κ22 – Λειτουργικά Συστήματα
Project 1

Γενικά
Για την υλοποίηση της άσκησης χρησιμοποίησα ένα δυαδικό δέντρο όπως ζητήθηκε, και σαν βοηθητικές δομές μια ταξινομημένη λίστα και δυο hash table. Η μία λίστα περιέχει τους καταθέτες ταξινομημένους με φθίνουσα σειρά , το ένα hash τους νομούς και τα στοιχεία τους και το άλλο όλα τα στοιχεία των καταθετών. Επίσης χρησιμοποίησα το αντικειμενοστραφές μοντέλο, επειδή νιώθω πιο οικεία με αυτό.

Δομές
1) Δέντρο:
Στο δέντρο έκανα τις εξής επιλογές. Είχα έναν δείκτη για τον γονιό που θα πάρει το επόμενο παιδί, καθώς και έναν για το τελευταίο που μπήκε. Για την εύρεση του “επόμενου” γονιού γίνεται με την εξής λογική. Πηγαίνω επάνω για όσο βρίσκομαι στο δεξί υπόδεντρο. Μόλις φτάσω στο σημείο που το υπόδεντρο που βρίσκομαι είναι το αριστερό παιδί, πηγαίνω στο δεξί υπόδεντρο του πατέρα και μετά τελείως κάτω αριστερά. Για τον προηγούμενο τελευταίο κόμβο ακολουθώ την ίδια λογική, αλλά ανάποδα. Επίσης επέλεξα να αλλάζω μόνο τα δεδομένα στο swap, επιλογή που με εμπόδισε μετά να βάλω και άλλες λειτουργείες στο δέντρο, αλλά δυστυχώς είχα προχωρήσει πολύ για να την αλλάξω όλα. Το δέντρο χρησιμοποιείται στις παρακάτω εντολές: load, ins, top, del, lookup, print, exit.

2) Λίστα:
Η λίστα είναι μια μονά συνδεδεμένη λίστα με τα στοιχεία με φθίνουσα σειρά με βάση το χρέος Επίσης περιέχει το συνολικό χρέος και αριθμό όλων των οφειλετών Ο βασικός σκοπός της είναι η εντολή top percentile, αλλά βοηθάει και στην εισαγωγή στο hashtable. Χρησιμοποιείται στις παρακάτω εντολές: load, ins, del, top percentile, exit.

3) Hash με νομούς
Το hash αυτό περιέχει όλους τους νομούς με τα απαραίτητα στοιχεία τους. Ο βασικός σκοπός του είναι η εντολές stats prefecture και sumstats. Χρησιμοποιείται στις εντολές: load, ins, stats, sumstats, exit

4) Hash
Μία πολύ απλή περίπτωση δομής hash, με κάδους με 5 στοιχεία ο καθένας. Χρησιμοποιείται για να ανακτηθούν τα στοιχεία των εγγραφών του δέντρου με βάση το ΑΦΜ. Αν κατά την εισαγωγή ένας κάδος είναι γεμάτος, η δομή hash αδειάζει, διπλασιάζεται ο αριθμός των bucket και επαναεισάγουμε όλες τις εγγραφές από την list. Χρησιμοποιείται στις εντολές: load, ins, top, del, lookup, print, exit.

Παρατηρήσεις για εντολές
Οι εντολές top και del είναι υλοποιημένες με 2 τρόπους, ο ένας με την λίστα(σχολιασμένος) και ο άλλος μέσω δέντρου και hash. Επέλεξα να αφήσω τον δεύτερο για να γίνεται χρήση του δέντρου, ακόμα και αν ο άλλος είναι ποιο γρήγορος. Το lookup έχει μια καθυστέρηση στο να βρεθεί το ύψος, αφού το ψάχνω στο δέντρο. Στο print και το exit dumpfile, οι δομές τυπώνονται (η αποθηκεύεται) με τα παιδιά του n γονέα στις θέσεις 2n και 2n+1. Στην print εμφανίζεται και ο αριθμός του κόμβου. Επίσης, στην περίπτωση που υπάρχει inputfile που δεν τελειώνει σε Α, το πρόγραμμα μπαίνει σε χειροκίνητη λειτουργία.

Άλλες Παρατηρήσεις
Στον φάκελο υπάρχουν τα outputfiles και dumpfiles από όλα τα testfiles με την ανάλογη ονομασία. Επίσης υπάρχουν κάποιες συναρτήσεις σε σχόλια, οι οποίες υλοποιούν τις λειτουργίες με άλλο τρόπο.
